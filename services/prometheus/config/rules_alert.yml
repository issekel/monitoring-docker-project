groups:

{% if enable_ping_complex | default("false") == "true" %}
- name: TransitAlerts
  rules:
  - alert: ComplexDown
    expr: probe_success{job="complex_{{ inventory_project_name }}"} == 0
    for: 30m
    labels:
      severity: warning
    annotations:{% raw %}
      summary: "К Комплексу нет доступа по {{ $labels.instance }}"
      description: "ВМ {{ $labels.node }} не отвечает более 5 минут по модулю {{ $labels.module }}\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
      timestamp: >
        {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}{% endraw %}
{% endif %}

- name: BlackboxAlerts
  rules:
  - alert: EndpointDown
    expr: probe_success{job!="complex_{{ inventory_project_name }}"} == 0
    for: 5m
    labels:
      severity: critical
    annotations:{% raw %}
      summary: "Endpoint down more than 5 minutes | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}"
      description: "Endpoint {{ $labels.node }} down more than 5 minutes.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
      timestamp: >
        {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}

- name: PrometheusSelfMonitoring
  rules:
  - alert: PrometheusJobMissing
    expr: absent(up{job="prometheus"})
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus job missing | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "A Prometheus job has disappeared\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTargetMissing
    expr: up == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Prometheus target missing | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "A Prometheus target has disappeared. An exporter might be crashed.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      timestamp: >
        {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}

  - alert: PrometheusAllTargetsMissing
    expr: count by (job,project) (up) == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Prometheus all targets missing | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "A Prometheus job does not have living target anymore.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      timestamp: >
        {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}

  - alert: PrometheusConfigurationReloadFailure
    expr: prometheus_config_last_reload_successful != 1
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus configuration reload failure | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus configuration reload error\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTooManyRestarts
    expr: changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m]) > 2
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus too many restarts | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusAlertmanagerConfigurationReloadFailure
    expr: alertmanager_config_last_reload_successful != 1
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus AlertManager configuration reload failure | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "AlertManager configuration reload error\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusAlertmanagerConfigNotSynced
    expr: count(count_values("config_hash", alertmanager_config_hash)) > 1
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus AlertManager config not synced | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Configurations of AlertManager cluster instances are out of sync\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusNotConnectedToAlertmanager
    expr: prometheus_notifications_alertmanagers_discovered < 1
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus not connected to alertmanager | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus cannot connect the alertmanager\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusRuleEvaluationFailures
    expr: increase(prometheus_rule_evaluation_failures_total[3m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus rule evaluation failures | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTemplateTextExpansionFailures
    expr: increase(prometheus_template_text_expansion_failures_total[3m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus template text expansion failures | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} template text expansion failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusRuleEvaluationSlow
    expr: prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Prometheus rule evaluation slow | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusNotificationsBacklog
    expr: min_over_time(prometheus_notifications_queue_length[10m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus notifications backlog | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "The Prometheus notification queue has not been empty for 10 minutes\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusAlertmanagerNotificationFailing
    expr: rate(alertmanager_notifications_failed_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus AlertManager notification failing | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Alertmanager is failing sending notifications\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTargetEmpty
    expr: prometheus_sd_discovered_targets == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Prometheus target empty | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus has no target in service discovery\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTargetScrapingSlow
    expr: prometheus_target_interval_length_seconds{quantile="0.9"} > 60
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Prometheus target scraping slow | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus is scraping exporters slowly\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusLargeScrape
    expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Prometheus large scrape | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus has many scrapes that exceed the sample limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTargetScrapeDuplicate
    expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus target scrape duplicate | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus has many samples rejected due to duplicate timestamps but different values\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbCheckpointCreationFailures
    expr: increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB checkpoint creation failures | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} checkpoint creation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbCheckpointDeletionFailures
    expr: increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB checkpoint deletion failures | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} checkpoint deletion failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbCompactionsFailed
    expr: increase(prometheus_tsdb_compactions_failed_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB compactions failed | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} TSDB compactions failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbHeadTruncationsFailed
    expr: increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB head truncations failed | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} TSDB head truncation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbReloadFailures
    expr: increase(prometheus_tsdb_reloads_failures_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB reload failures | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} TSDB reload failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbWalCorruptions
    expr: increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB WAL corruptions | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} TSDB WAL corruptions\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PrometheusTsdbWalTruncationsFailed
    expr: increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Prometheus TSDB WAL truncations failed | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Prometheus encountered {{ $value }} TSDB WAL truncation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

- name: CadvisorMetrics
  rules:
  - alert: Container Too Many Restarts
    expr: count by (instance,name,node,project) (count_over_time(container_last_seen{name!="", container_label_restartcount!=""}[5m])) - 1 > 0
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: Too many restarts ({{ $value }}) for container {{ $labels.name }} | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}

- name: Postgres-Exporter
  rules:
  - alert: PostgresqlDown
    expr: pg_up == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Postgresql down | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Postgresql instance is down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PostgresqlExporterError
    expr: pg_exporter_last_scrape_error > 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Postgresql exporter error | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Postgresql exporter is showing errors. A query may be buggy in query.yaml\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PostgresqlTooManyConnections
    expr: sum by (datname,project) (pg_stat_activity_count{datname!~"template.*|postgres"}) > pg_settings_max_connections * 0.8
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: Postgresql too many connections | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "PostgreSQL instance has too many connections (> 80%).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PostgresqlDeadLocks
    expr: increase(pg_stat_database_deadlocks{datname!~"template.*|postgres"}[1m]) > 5
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Postgresql dead locks | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "PostgreSQL has dead-locks\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PostgresqlTooManyLocksAcquired
    expr: ((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: Postgresql too many locks acquired | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

- name: Redis-Exporter
  rules:
  - alert: RedisDown
    expr: redis_up == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Redis down | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Redis instance is down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisMissingMaster
    expr: (count(redis_instance_info{role="master"}) or vector(0)) < 1
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Redis missing master | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Redis cluster has no node marked as master.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisDisconnectedSlaves
    expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 1
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Redis disconnected slaves | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Redis not replicating for all slaves. Consider reviewing the redis replication status.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisReplicationBroken
    expr: delta(redis_connected_slaves[1m]) < 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Redis replication broken | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Redis instance lost a slave\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisOutOfSystemMemory
    expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: Redis out of system memory | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Redis is running out of system memory (> 90%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisTooManyConnections
    expr: redis_connected_clients > 100
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: Redis too many connections | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Redis instance has too many connections\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: RedisRejectedConnections
    expr: increase(redis_rejected_connections_total[1m]) > 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Redis rejected connections | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Some connections to Redis has been rejected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

- name: NodeExporterGroup
  rules:
  - alert: HostOutOfMemory
    expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 5
    for: 30m
    labels:
      severity: critical
    annotations:
      summary: Host out of memory | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Node memory is filling up (< 5% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostMemoryUnderMemoryPressure
    expr: rate(node_vmstat_pgmajfault[1m]) > 1000
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host memory under memory pressure | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "The node is under heavy memory pressure. High rate of major page faults\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostUnusualNetworkThroughputIn
    expr: sum by (instance,node,project) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Host unusual network throughput in | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Host network interfaces are probably receiving too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostUnusualNetworkThroughputOut
    expr: sum by (instance,node,project) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Host unusual network throughput out | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Host network interfaces are probably sending too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostUnusualDiskWriteRate
    expr: sum by (instance,node,project) (rate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50
    for: 20m
    labels:
      severity: warning
    annotations:
      summary: Host unusual disk write rate | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Disk is probably writing too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostOutOfDiskSpace
    expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
    for: 30m
    labels:
      severity: critical
    annotations:
      summary: Host out of disk space | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Disk is almost full (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostUnusualDiskReadRate
    expr: sum by (instance,node,project) (rate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Host unusual disk read rate | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Disk is probably reading too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostDiskWillFillIn24Hours
    expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host disk will fill in 24 hours | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Filesystem is predicted to run out of space within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostOutOfInodes
    expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host out of inodes | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Disk is almost running out of available inodes (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostInodesWillFillIn24Hours
    expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and predict_linear(node_filesystem_files_free{mountpoint="/rootfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host inodes will fill in 24 hours | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostUnusualDiskReadLatency
    expr: rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 0.1 and rate(node_disk_reads_completed_total[1m]) > 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host unusual disk read latency | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Disk latency is growing (read operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostUnusualDiskWriteLatency
    expr: rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 0.1 and rate(node_disk_writes_completed_total[1m]) > 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host unusual disk write latency | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Disk latency is growing (write operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostHighCpuLoad
    expr: 100 - (avg by (instance,node,project) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 95
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: Host high CPU load | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "CPU load is > 95%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostCpuStealNoisyNeighbor
    expr: avg by (instance,node,project) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Host CPU steal noisy neighbor | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostSwapIsFillingUp
    expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 95
    for: 15m
    labels:
      severity: critical
    annotations:
      summary: Host swap is filling up | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Swap is filling up (>95%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostCpuHighIowait
    expr: avg by (instance,node,project) (rate(node_cpu_seconds_total{mode="iowait"}[5m])) * 100 > 60
    for: 15m
    labels:
      severity: critical
    annotations:
      summary: Host CPU high iowait | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "CPU iowait > 5%. A high iowait means that you are disk or network bound.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostSystemdServiceCrashed
    expr: node_systemd_unit_state{state="failed"} == 1
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Host systemd service crashed | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "systemd service crashed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostPhysicalComponentTooHot
    expr: node_hwmon_temp_celsius > 75
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Host physical component too hot | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Physical hardware component too hot\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostNodeOvertemperatureAlarm
    expr: node_hwmon_temp_crit_alarm_celsius == 1
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Host node overtemperature alarm | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Physical node temperature alarm triggered\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostRaidArrayGotInactive
    expr: node_md_state{state="inactive"} > 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Host RAID array got inactive | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostRaidDiskFailure
    expr: node_md_disks{state="failed"} > 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host RAID disk failure | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostKernelVersionDeviations
    expr: count(sum(label_replace(node_uname_info, "kernel", "$1", "release", "([0-9]+.[0-9]+.[0-9]+).*")) by (kernel)) > 1
    for: 6h
    labels:
      severity: warning
    annotations:
      summary: Host kernel version deviations | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Different kernel versions are running\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostOomKillDetected
    expr: increase(node_vmstat_oom_kill[1m]) > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Host OOM kill detected | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "OOM kill detected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostEdacCorrectableErrorsDetected
    expr: increase(node_edac_correctable_errors_total[1m]) > 0
    for: 0m
    labels:
      severity: info
    annotations:
      summary: Host EDAC Correctable Errors detected | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostEdacUncorrectableErrorsDetected
    expr: node_edac_uncorrectable_errors_total > 0
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Host EDAC Uncorrectable Errors detected | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} uncorrectable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostNetworkReceiveErrors
    expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host Network Receive Errors | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostNetworkTransmitErrors
    expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host Network Transmit Errors | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostNetworkBondDegraded
    expr: (node_bonding_active - node_bonding_slaves) != 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host Network Bond Degraded | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Bond \"{{ $labels.device }}\" degraded on \"{{ $labels.instance }}\".\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostConntrackLimit
    expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Host conntrack limit | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "The number of conntrack is approaching limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostClockSkew
    expr: (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host clock skew | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostClockNotSynchronising
    expr: min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host clock not synchronising | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Clock not synchronising. Ensure NTP is configured on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: HostRequiresReboot
    expr: node_reboot_required > 0
    for: 4h
    labels:
      severity: info
    annotations:
      summary: Host requires reboot | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "{{ $labels.instance }} requires a reboot.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

- name: MinioDiskMonitoring
  rules:
  - alert: MinioDiskOffline
    expr: minio_disks_offline > 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Minio disk offline | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Minio disk is offline\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      timestamp: >
        {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}

  - alert: MinioDiskSpaceUsage
    expr: disk_storage_available / disk_storage_total * 100 < 10
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Minio disk space usage | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Minio available free space is low (< 10%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      timestamp: >
        {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}

- name: Thanos-compact-transit
  rules:
  - alert: ThanosCompactionHalted
    expr: thanos_compact_halted == 1
    for: 0m
    labels:
      severity: info
    annotations:
      summary: Thanos compaction halted | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Thanos compaction has failed to run and is now halted.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: ThanosCompactBucketOperationFailure
    expr: rate(thanos_objstore_bucket_operation_failures_total[1m]) > 0
    for: 30m
    labels:
      severity: info
    annotations:
      summary: Thanos compact bucket operation failure | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Thanos compaction has failing storage operations\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: ThanosCompactNotRun
    expr: (time() - thanos_objstore_bucket_last_successful_upload_time) > 24*60*60
    for: 0m
    labels:
      severity: info
    annotations:
      summary: Thanos compact not run | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "Thanos compaction has not run in 24 hours.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
{% endraw %}
- name: Fluent-bit
  rules:
  - alert: NoOutputBytesProcessed
    expr: rate(fluentbit_output_proc_bytes_total{name="loki.0", instance!="{{ inventory_netvision_osm_host }}", instance!="{{ inventory_netvision_keycloak_host }}"}[30m]) == 0
    labels:
      severity: critical
    annotations:{% raw %}
      message: |
        Fluent Bit instance {{ $labels.instance }}'s output plugin {{ $labels.name }} has not processed any
        bytes for at least 30 minutes.
      summary: Fluent-Bit output plugin has not processed any bytes for at least 5 minutes | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    for: 1m

- name: Loki
  rules:
  - alert: LokiProcessTooManyRestarts
    expr: changes(process_start_time_seconds{job=~"loki"}[15m]) > 2
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: Loki process too many restarts | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "A loki process had too many restarts (target {{ $labels.instance }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: LokiRequestErrors
    expr: 100 * sum(rate(loki_request_duration_seconds_count{status_code=~"5.."}[1m])) by (instance,node,project) / sum(rate(loki_request_duration_seconds_count[1m])) by (namespace, job, route) > 10
    for: 15m
    labels:
      severity: critical
    annotations:
      summary: Loki request errors | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "The {{ $labels.job }} and {{ $labels.route }} are experiencing errors\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: LokiRequestPanic
    expr: sum(increase(loki_panic_total[10m])) by (instance,node,project) > 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Loki request panic | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "The {{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }}% increase of panics\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: LokiRequestLatency
    expr: (histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket{route!~"(?i).*tail.*"}[5m])) by (le,instance,node,project)))  > 1
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Loki request latency | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
      description: "The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
{% endraw %}
{% if inventory_thanos | default("false") == "true" %}
{% raw %}
- name: thanos-query
  rules:
  - alert: ThanosQueryHttpRequestQueryErrorRateHigh
    annotations:
      description: Thanos Query {{$labels.job}} is failing to handle {{$value | humanize}}% of "query" requests.
      summary: Thanos Query is failing to handle requests | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(http_requests_total{code=~"5..", job=~".*thanos-query.*", handler="query"}[5m]))
      /
        sum by (job) (rate(http_requests_total{job=~".*thanos-query.*", handler="query"}[5m]))
      ) * 100 > 5
    for: 5m
    labels:
      severity: warning
  - alert: ThanosQueryHttpRequestQueryRangeErrorRateHigh
    annotations:
      description: Thanos Query {{$labels.job}} is failing to handle {{$value | humanize}}% of "query_range" requests.
      summary: Thanos Query is failing to handle requests | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(http_requests_total{code=~"5..", job=~".*thanos-query.*", handler="query_range"}[5m]))
      /
        sum by (job) (rate(http_requests_total{job=~".*thanos-query.*", handler="query_range"}[5m]))
      ) * 100 > 5
    for: 5m
    labels:
      severity: warning
  - alert: ThanosQueryGrpcServerErrorRate
    annotations:
      description: Thanos Query {{$labels.job}} is failing to handle {{$value | humanize}}% of requests.
      summary: Thanos Query is failing to handle requests | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*thanos-query.*"}[5m]))
      /
        sum by (job) (rate(grpc_server_started_total{job=~".*thanos-query.*"}[5m]))
      * 100 > 5
      )
    for: 5m
    labels:
      severity: warning
  - alert: ThanosQueryGrpcClientErrorRate
    annotations:
      description: Thanos Query {{$labels.job}} is failing to send {{$value | humanize}}% of requests.
      summary: Thanos Query is failing to send requests | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(grpc_client_handled_total{grpc_code!="OK", job=~".*thanos-query.*"}[5m]))
      /
        sum by (job) (rate(grpc_client_started_total{job=~".*thanos-query.*"}[5m]))
      ) * 100 > 5
    for: 5m
    labels:
      severity: warning
  - alert: ThanosQueryHighDNSFailures
    annotations:
      description: Thanos Query {{$labels.job}} have {{$value | humanize}}% of failing DNS queries for store endpoints.
      summary: Thanos Query is having high number of DNS failures | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(thanos_query_store_apis_dns_failures_total{job=~".*thanos-query.*"}[5m]))
      /
        sum by (job) (rate(thanos_query_store_apis_dns_lookups_total{job=~".*thanos-query.*"}[5m]))
      ) * 100 > 1
    for: 15m
    labels:
      severity: warning
  - alert: ThanosQueryInstantLatencyHigh
    annotations:
      description: Thanos Query {{$labels.job}} has a 99th percentile latency of {{$value}} seconds for instant queries.
      summary: Thanos Query has high latency for queries | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        histogram_quantile(0.99, sum by (job,le,project) (rate(http_request_duration_seconds_bucket{job=~".*thanos-query.*", handler="query"}[5m]))) > 40
      and
        sum by (job) (rate(http_request_duration_seconds_bucket{job=~".*thanos-query.*", handler="query"}[5m])) > 0
      )
    for: 10m
    labels:
      severity: warning
  - alert: ThanosQueryRangeLatencyHigh
    annotations:
      description: Thanos Query {{$labels.job}} has a 99th percentile latency of {{$value}} seconds for range queries.
      summary: Thanos Query has high latency for queries | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        histogram_quantile(0.99, sum by (job,le,project) (rate(http_request_duration_seconds_bucket{job=~".*thanos-query.*", handler="query_range"}[5m]))) > 90
      and
        sum by (job) (rate(http_request_duration_seconds_count{job=~".*thanos-query.*", handler="query_range"}[5m])) > 0
      )
    for: 10m
    labels:
      severity: warning

- name: thanos-store
  rules:
  - alert: ThanosStoreGrpcErrorRate
    annotations:
      description: Thanos Store {{$labels.job}} is failing to handle {{$value | humanize}}%
        of requests.
      runbook_url: https://github.com/thanos-io/thanos/tree/main/mixin/runbook.md#alert-name-thanosstoregrpcerrorrate
      summary: Thanos Store is failing to handle qrpcd requests | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*thanos-store.*"}[5m]))
      /
        sum by (job) (rate(grpc_server_started_total{job=~".*thanos-store.*"}[5m]))
      * 100 > 5
      )
    for: 5m
    labels:
      severity: warning
  - alert: ThanosStoreSeriesGateLatencyHigh
    annotations:
      description: Thanos Store {{$labels.job}} has a 99th percentile latency of {{$value}}
        seconds for store series gate requests.
      runbook_url: https://github.com/thanos-io/thanos/tree/main/mixin/runbook.md#alert-name-thanosstoreseriesgatelatencyhigh
      summary: Thanos Store has high latency for store series gate requests | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        histogram_quantile(0.99, sum by (job,le,project) (rate(thanos_bucket_store_series_gate_duration_seconds_bucket{job=~".*thanos-store.*"}[5m]))) > 2
      and
        sum by (job) (rate(thanos_bucket_store_series_gate_duration_seconds_count{job=~".*thanos-store.*"}[5m])) > 0
      )
    for: 10m
    labels:
      severity: warning
  - alert: ThanosStoreBucketHighOperationFailures
    annotations:
      description: Thanos Store {{$labels.job}} Bucket is failing to execute {{$value
        | humanize}}% of operations.
      runbook_url: https://github.com/thanos-io/thanos/tree/main/mixin/runbook.md#alert-name-thanosstorebuckethighoperationfailures
      summary: Thanos Store Bucket is failing to execute operations | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        sum by (job,project) (rate(thanos_objstore_bucket_operation_failures_total{job=~".*thanos-store.*"}[5m]))
      /
        sum by (job) (rate(thanos_objstore_bucket_operations_total{job=~".*thanos-store.*"}[5m]))
      * 100 > 5
      )
    for: 15m
    labels:
      severity: warning
  - alert: ThanosStoreObjstoreOperationLatencyHigh
    annotations:
      description: Thanos Store {{$labels.job}} Bucket has a 99th percentile latency
        of {{$value}} seconds for the bucket operations.
      runbook_url: https://github.com/thanos-io/thanos/tree/main/mixin/runbook.md#alert-name-thanosstoreobjstoreoperationlatencyhigh
      summary: Thanos Store is having high latency for bucket operations | {{ $labels.project }} {{ $labels.instance }} {{ $labels.node }}
    expr: |
      (
        histogram_quantile(0.99, sum by (job,le,project) (rate(thanos_objstore_bucket_operation_duration_seconds_bucket{job=~".*thanos-store.*"}[5m]))) > 2
      and
        sum by (job) (rate(thanos_objstore_bucket_operation_duration_seconds_count{job=~".*thanos-store.*"}[5m])) > 0
      )
    for: 10m
    labels:
      severity: warning
{% endraw %}
{% endif %}